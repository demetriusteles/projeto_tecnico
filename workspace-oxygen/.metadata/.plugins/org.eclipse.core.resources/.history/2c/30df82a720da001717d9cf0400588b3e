package com.betha.projeto_manutencao.model.entity;

import java.util.Calendar;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.validation.constraints.Size;

@Entity(name = "port.Login")
@Table(name = "port_login")
@SequenceGenerator(name = "sequencePortLogin", sequenceName = "port_seq_login", allocationSize = 1)
public class Login implements BaseModel {
	@Id
	@Column(name = "id")
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "sequencePortLogin")
	private Integer id;

	@OneToOne
	@JoinColumn(name = "cod_usuario", nullable = false)
	private Usuario usuario;
	
	@Column(name = "email", nullable = false)
	@Size(max = 128)
	private String email;
	
	@Column(name = "senha", nullable = false)
	@Size(max = 128)
	private String senha;
	
	@Size(max = 64)
	@Column(name = "token")
	private String token;

	@Column(name = "dt_login")
	private Calendar dtLogin;

	@Column(name = "dt_criacao", nullable = false)
	private Calendar dtCriacao;

	@Column(name = "bloqueado", nullable = false)
	private boolean bloqueado = false;
	
	
	public Login() {
		this.dtCriacao = Calendar.getInstance();
	}
	
	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Usuario getUsuario() {
		return usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getSenha() {
		return senha;
	}

	public void setSenha(String senha) {
		this.senha = senha;
	}

	public String getToken() {
		return token;
	}

	public void setToken(String token) {
		this.token = token;
	}

	public Calendar getDtLogin() {
		return dtLogin;
	}

	public void setDtLogin(Calendar dtLogin) {
		this.dtLogin = dtLogin;
	}

	public Calendar getDtCriacao() {
		return dtCriacao;
	}

	public void setDtCriacao(Calendar dtCriacao) {
		this.dtCriacao = dtCriacao;
	}

	public boolean isBloqueado() {
		return bloqueado;
	}

	public boolean getBloqueado() {
		return bloqueado;
	}

	public void setBloqueado(boolean bloqueado) {
		this.bloqueado = bloqueado;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Login other = (Login) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

}
